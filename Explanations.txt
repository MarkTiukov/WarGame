ПАТТЕРН: builder
ЦЕЛЬ: построение поля игры
ПОДРОБНЕЕ: FieldBuilder - интерфейс билдера, см папку fields
ПОЧЕМУ: поле - сложная структура. Может быть рассчитана для 2, 3, 4 и тд игроков. Также может разная вариация генерации лута, форм, начальных расположений и прочего. 

ПАТТЕРН: factory method
ЦЕЛЬ: создание базы конкретной фракции (по сути инициализация фракции на поле)
ПОДРОБНЕЕ: Fraction выступает в роли Creator с методом createBase(), HumanFraction - пример конкретной фабрики (данная для фракции людей), HumanBaseCell - конкретный продукт, который является наследником BaseCell
ПОЧЕМУ: Создавать базы, очевидно, должны сами фракции, чтобы для каждой фракции создавать свою базу (который должны отличаться минимум картинкой). При этом, базы должны наследоваться от одного класса BaseCell, потому что по факту делают одно и то же, только с индивидуальными особенностями.  

ПАТТЕРН: абстрактная фабрика
ЦЕЛЬ: создает юниты
ПОДРОБНЕЕ: AbsFractory4Units - интерфейс данной фабрики. Прибавляя в начало название фракции получаем конкретные фабрики
ПОЧЕМУ: Фракций может быть много. Типов юнитов еще больше. Поэтому, чтобы добавление нового юнита было более простым (в плане согласованности) данный паттерн идеально подходит. 